#!/bin/bash

set -e

pushd "${BASH_SOURCE%/*}" > /dev/null
. bin/constants.sh
. bin/console.sh
. bin/check-directories.sh
. bin/boot-deployment.sh
popd > /dev/null

PROJECT_NAME=default

while getopts "vp:" opt;
do
    case ${opt} in
        v)
            VERBOSE=1
            ;;
        p)
            PROJECT_NAME=$OPTARG
            if [ "${PROJECT_NAME}" != "${PROJECT_NAME%[[:space:]]*}" ];
            then
                error "${WARN}The project name cannot contain spaces.${NC}"
                exit 1
            fi
            ;;
        *)
          ;;
    esac
done
shift $((OPTIND -1))

DESTINATION_DIR=${DESTINATION_DIR:-"${BASH_SOURCE%/*}/deployment/${PROJECT_NAME}"}
DEPLOYMENT_DIR="${BASH_SOURCE%/*}/deployment/_tmp"
readonly DEPLOY_SCRIPT=${DESTINATION_DIR}/deploy

function showHelp()
{
    echo -e ""
    echo -e "${INFO}Installation:${NC}"
    echo -e " $0 [-v] [-p <project-name=default>] bootstrap [<project-yml-file=deploy.yml>]"

    echo -e ""
    echo -e "${INFO}Quick start:${NC}"
    echo -e " $0 bootstrap && $0 up"
}

checkDirectories

command=$1
shift 1 || true

case "${command}" in
    boot|bootstrap)
        [ -f "${DEPLOY_SCRIPT}" ] && SPRYKER_SELF_SCRIPT=$0 ${DEPLOY_SCRIPT} down > /dev/null 2>&1 && sleep 2 || true

        # ------------
        SOURCE_DIR=${BASH_SOURCE%/*}

        # ------------
        PROJECT_YAML=${1:-deploy.yml}

        # ------------
        [ -d "${DEPLOYMENT_DIR}" ] && rm -rf "${DEPLOYMENT_DIR}"
        mkdir "${DEPLOYMENT_DIR}"

        DEPLOYMENT_DIR="$( cd "${DEPLOYMENT_DIR}" >/dev/null 2>&1 && pwd )"

        # ------------
        validateParameters
        bootDeployment

        [ -d "${DESTINATION_DIR}" ] && rm -rf "${DESTINATION_DIR:?}/*"
        [ ! -d "${DESTINATION_DIR}" ] && mkdir "${DESTINATION_DIR}"
        cp -R "${DEPLOYMENT_DIR}/." "${DESTINATION_DIR}"
        rm -rf "${DEPLOYMENT_DIR}"

        [ ! -f .dockerignore ] && cp "${BASH_SOURCE%/*}/.dockerignore.default" .dockerignore
        SPRYKER_SELF_SCRIPT=$0 ${DEPLOY_SCRIPT} install

        echo ""
        echo -e "${INFO}Deployment is generated into ${LGRAY}${DESTINATION_DIR}${NC}"
        echo -e "Use ${OK}docker/sdk$([ "${PROJECT_NAME}" != 'default' ] && echo -n " -p ${PROJECT_NAME}") up${NC} to start the application."

        ;;
    help|'')
        showHelp
        [ -f "${DEPLOY_SCRIPT}" ] && SPRYKER_SELF_SCRIPT=$0 ${DEPLOY_SCRIPT} help ${@}
        ;;
    *)
        [ ! -f "${DEPLOY_SCRIPT}" ] && showHelp && error "${WARN}The project is not initialized yet. Run ${YELLOW}$0 boot${WARN} before.${NC}" && exit 1
        SPRYKER_SELF_SCRIPT=$0 ${DEPLOY_SCRIPT} "${command}" ${@}
        ;;
esac
