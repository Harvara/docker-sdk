{% include "nginx/conf.d/common.conf.twig" with _context %}

map $cookie_XDEBUG_SESSION $xdebug_mode {
    ""      "";
    default "_xdebug";
}

map $cookie_XDEBUG_SESSION $xdebug_port {
""      "9000";
default "9001";
}

server {
    server_name _; # This is just an invalid value which will never trigger on a real hostname.
    listen {{ docker['ssl']['enabled'] ? '443 ssl http2' : 80 }};
    access_log /var/log/nginx/access.log vhost;
    return 502;
{% if docker['ssl']['enabled'] %}
    {% include "nginx/vhost.d/ssl.default.conf.twig" with _context %}
{% endif %}
}

{% if docker['ssl']['enabled'] %}
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 302 https://$host$request_uri;
}
{% endif %}

{% for groupData in groups %}
{% for applicationName, applicationData in groupData['applications'] %}

{% for endpoint, endpointData in applicationData['endpoints'] %}
{% include "nginx/http/#{applicationData['application']}.server.conf.twig" with {
    ssl: docker['ssl']['enabled'] | default(false),
    endpoint: endpoint,
    endpointData: endpointData,
    auth: endpointData['auth'] | default([]),
    storeServices: regions[groupData['region']]['stores'][endpointData['store']]['services'] | default([]),
    upstream: (applicationData['application'] == 'zed' ? 'rpc_server' : applicationName | lower) ~ ":$xdebug_port",
    rpcServer: "rpc_server_" ~ ( endpointData['store'] | lower ),
    zedHost: "rpc_server_" ~ ( endpointData['store'] | lower ) ~ '$xdebug_mode',
    project: _context
} %}
{% endfor %}
{% endfor %}
{% endfor %}

{% for serviceName, serviceData in services %}
{% for endpoint, endpointData in serviceData['endpoints'] %}
{% set protocol = endpointData['protocol'] | default('http') %}
{% if protocol is same as ('http') %}
{% include "nginx/#{protocol}/#{serviceData['engine']}.server.conf.twig" with {
    ssl: docker['ssl']['enabled'] | default(false),
    endpoint: endpoint,
    endpointData: endpointData,
    storeServices: regions[groupData['region']]['stores'][endpointData['store']]['services'] | default([]),
    upstream: serviceName ~ (serviceData['web-port'] ? ':' ~ serviceData['proxy-port'] : ''),
    project: _context
} %}
{% endif %}
{% endfor %}
{% endfor %}
